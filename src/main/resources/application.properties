# Application
spring.application.name=routing
server.port=8989
server.address=127.0.0.1

# Jedis
redis.cluster.nodes=localhost:7000,localhost:7001,localhost:7002,localhost:7003,localhost:7004,localhost:7005,localhost:7006,localhost:7007,localhost:7008,localhost:7009
redis.threadPool.maxTotal=60
redis.threadPool.maxIdle=50
redis.threadPool.minIdle=10
redis.threadPool.blockWhenExhausted=true

# Process
redis.preMessageList=preMessage
redis.preMessage.itemsToProcess=1000
redis.preMessage.workers=10
redis.preDeliverList=preDeliver
redis.preDeliver.itemsToProcess=1000
redis.preDeliver.workers=10

# Lists
redis.smpp.messageList=smpp_message
redis.http.messageList=http_message
redis.ss7.messageList=ss7_message
redis.smpp.result=submit_sm_result
redis.http.result=http_submit_sm_result

redis.smpp.dlrList=smpp_dlr
redis.http.dlrList=http_dlr

# Routing
app.routingRuleHash=routing_rules
app.generalSettingsHash=general_settings
app.ss7SettingsHash=ss7_settings
app.smppHttpGSKey=smpp_http
app.gateways=gateways
app.serviceProviders=service_providers

# DLR Retries
smpp.redis.deliverySm.retryList=smpp_dlr_retry_list
http.redis.deliverySm.retryList=http_dlr_retry_list

# Websocket
websocket.server.enabled=true
websocket.server.host=localhost
websocket.server.port=9087
websocket.server.path=/ws
websocket.server.retryInterval=10000
websocket.header.name=Authorization
websocket.header.value=fcb13146-ecd7-46a5-b9cb-a1e75fae9bdc

# Related to the requests to the backend for notify the rating per service provider per second, the url must end with '/'
backend.url=http://localhost:9000/balance-credit/credit-used/
backend.apiKey=Cn62uZGdSUeGqmtVnHmI7iaji3C74bRd
backend.RequestFrequency=1000

# Threads
spring.threads.virtual.enabled=true